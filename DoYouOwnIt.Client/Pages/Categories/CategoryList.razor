@page "/categories"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@attribute [Authorize (Roles ="Admin")]

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item active">Categories</li>
    </ol>
</nav>

<button class="btn btn-primary" mb-2 @onclick="CreateCategory">
    Create Category
</button>
@if (categories == null || !categories.Any())
{
    <p>Loading Categories...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Category Name</th>
                <th>Slug</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in categories)
            {
                <tr>
                    <td><a href="categories/edit/@category.Slug">@category.Category</a></td>
                    <td><a href="categories/edit/@category.Slug">@category.Slug</a></td>
                    <td><a href="categories/edit/@category.Slug">@category.Description</a></td>
                </tr>
            }
        </tbody>
    </table>
}




@code {

	private List<ProductCategoryResponse>? categories = new List<ProductCategoryResponse>();

    protected override async Task OnInitializedAsync()
    {
        await LoadCategories();
    }

	private async Task LoadCategories()
    {
        try
        {
            var response = await Http.GetAsync("api/productcategory");
            // Add this debug output
            var responseContent = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"API Response: {responseContent}");
            if (response.IsSuccessStatusCode)
            {
                categories = await response.Content.ReadFromJsonAsync<List<ProductCategoryResponse>>();
            }
            else
            {
                Console.WriteLine($"Error: {response.StatusCode} - {responseContent}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading categories: {ex.Message}");
        }
	}

    private void CreateCategory()
    {
		NavigationManager.NavigateTo("/categories/create");
    }
}

